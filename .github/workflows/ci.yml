name: CI

on:
  schedule:
    - cron: 0 0 * * 0
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+**'
  pull_request:

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          default: true

      - name: rustup component add
        run: rustup component add rustfmt

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  coverage:
    name: Coverage
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-x86_64-unknown-linux-gnu
          default: true

      - name: '`cargo test`'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads

      - name: grcov
        id: grcov
        uses: actions-rs/grcov@v0.1

      - name: Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.grcov.outputs.report }}

  build:
    strategy:
      fail-fast: false
      matrix:
        name:
          - stable-x86_64-pc-windows-msvc (minimal versions)
          - stable-x86_64-pc-windows-msvc (maximal versions)
          - stable-x86_64-pc-windows-gnu (minimal versions)
          - stable-x86_64-pc-windows-gnu (maximal versions)
          - stable-x86_64-apple-darwin (minimal versions)
          - stable-x86_64-apple-darwin (maximal versions)
          - stable-x86_64-unknown-linux-gnu (minimal versions)
          - stable-x86_64-unknown-linux-gnu (maximal versions)
          - stable-x86_64-unknown-linux-musl (minimal versions)
          - stable-x86_64-unknown-linux-musl (maximal versions)
          - beta-x86_64-unknown-linux-gnu (minimal versions)
          - beta-x86_64-unknown-linux-gnu (maximal versions)
          - nightly-x86_64-unknown-linux-gnu (minimal versions)
          - nightly-x86_64-unknown-linux-gnu (maximal versions)
        include:
          - name: stable-x86_64-pc-windows-msvc (minimal versions)
            os: windows-2019
            channel: stable
            host: x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
            nightly_toolchain: nightly-x86_64-pc-windows-msvc
          - name: stable-x86_64-pc-windows-msvc (maximal versions)
            os: windows-2019
            channel: stable
            host: x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - name: stable-x86_64-pc-windows-gnu (minimal versions)
            os: windows-2019
            channel: stable
            host: x86_64-pc-windows-gnu
            target: x86_64-pc-windows-gnu
            nightly_toolchain: nightly-x86_64-pc-windows-msvc
          - name: stable-x86_64-pc-windows-gnu (maximal versions)
            os: windows-2019
            channel: stable
            host: x86_64-pc-windows-gnu
            target: x86_64-pc-windows-gnu
          - name: stable-x86_64-apple-darwin (minimal versions)
            os: macOS-10.14
            channel: stable
            host: x86_64-apple-darwin
            target: x86_64-apple-darwin
            nightly_toolchain: nightly-x86_64-apple-darwin
          - name: stable-x86_64-apple-darwin (maximal versions)
            os: macOS-10.14
            channel: stable
            host: x86_64-apple-darwin
            target: x86_64-apple-darwin
          - name: stable-x86_64-unknown-linux-gnu (minimal versions)
            os: ubuntu-18.04
            channel: stable
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
            nightly_toolchain: nightly-x86_64-unknown-linux-gnu
          - name: stable-x86_64-unknown-linux-gnu (maximal versions)
            os: ubuntu-18.04
            channel: stable
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
          - name: stable-x86_64-unknown-linux-musl (minimal versions)
            os: ubuntu-18.04
            channel: stable
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-musl
            nightly_toolchain: nightly-x86_64-unknown-linux-gnu
          - name: stable-x86_64-unknown-linux-musl (maximal versions)
            os: ubuntu-18.04
            channel: stable
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-musl
          - name: beta-x86_64-unknown-linux-gnu (minimal versions)
            os: ubuntu-18.04
            channel: beta
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
            nightly_toolchain: nightly-x86_64-unknown-linux-gnu
          - name: beta-x86_64-unknown-linux-gnu (maximal versions)
            os: ubuntu-18.04
            channel: beta
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
          - name: nightly-x86_64-unknown-linux-gnu (minimal versions)
            os: ubuntu-18.04
            channel: nightly
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
            nightly_toolchain: nightly-x86_64-unknown-linux-gnu
          - name: nightly-x86_64-unknown-linux-gnu (maximal versions)
            os: ubuntu-18.04
            channel: nightly
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: apt-get install
        run: sudo apt-get install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl'

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}-${{ matrix.host }}
          target: ${{ matrix.target }}
          default: true

      - name: Install nightly Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.nightly_toolchain }}
          default: false
        if: matrix.nightly_toolchain

      - name: rustup component add
        run: rustup component add clippy

      - name: cargo update -Z minimal-versions
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: -Z minimal-versions
          toolchain: ${{ matrix.nightly_toolchain }}
        if: matrix.nightly_toolchain

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets --all-features --target ${{ matrix.target }} -- -D warnings

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --all-targets --all-features --target ${{ matrix.target }}

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --all-features --no-fail-fast --target ${{ matrix.target }}

  publish:
    name: cargo pubish
    runs-on: ubuntu-18.04
    needs: [rustfmt, coverage, build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v1

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          default: true

      - name: cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --all-features --verbose --token ${{ secrets.CRATES_IO_TOKEN }}
